# Generated by Django 5.1.6 on 2025-02-26 22:23

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=50, verbose_name="Country Name")),
                ("code", models.CharField(max_length=20, verbose_name="Country Code")),
                (
                    "flag",
                    models.URLField(
                        blank=True, default="", null=True, verbose_name="Flag URL"
                    ),
                ),
                (
                    "length",
                    models.IntegerField(default=0, verbose_name="Mobile Number Length"),
                ),
                (
                    "emoji",
                    models.CharField(
                        default="üè≥Ô∏è", max_length=10, verbose_name="Flag Emoji"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("code", models.CharField(max_length=3, unique=True)),
                ("symbol", models.CharField(max_length=3, unique=True)),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=4, default=1, max_digits=10),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "currencies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("aside", models.BooleanField(default=False)),
                ("nav", models.BooleanField(default=False)),
                ("footer", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("placeId", models.CharField(max_length=255, verbose_name="Place ID")),
                ("latitude", models.FloatField(verbose_name="Latitude")),
                ("longitude", models.FloatField(verbose_name="Longitude")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Setting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("tag", models.CharField(blank=True, max_length=255, null=True)),
                ("key", models.CharField(max_length=255)),
                ("value", models.TextField()),
                (
                    "data_type",
                    models.TextField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("boolean", "Boolean"),
                            ("json", "Json"),
                        ],
                        default="string",
                    ),
                ),
            ],
            options={
                "db_table": "settings",
                "ordering": ["key"],
            },
        ),
    ]
